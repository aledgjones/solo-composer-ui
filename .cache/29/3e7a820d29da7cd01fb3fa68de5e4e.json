{"id":"DZ3S","dependencies":[{"name":"/home/aled/solo-composer-ui/tsconfig.json","includedInParent":true,"mtime":1598401787877},{"name":"/home/aled/solo-composer-ui/package.json","includedInParent":true,"mtime":1598403412572},{"name":"react","loc":{"line":1,"column":30},"parent":"/home/aled/solo-composer-ui/ui/components/sortable-container/context.ts","resolved":"/home/aled/solo-composer-ui/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.SortableContext=void 0;var e=require(\"react\"),t=(0,e.createContext)({config:{direction:\"y\",onEnd:function(){}},items:{},setItems:function(){}});exports.SortableContext=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":0}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":13}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":20}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":35}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":43}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":56}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":57}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":64}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":68}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":76}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":97}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":103}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":105}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":113}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":13},"generated":{"line":1,"column":122}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":31},"generated":{"line":1,"column":125}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":54},"generated":{"line":1,"column":127}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":54},"generated":{"line":1,"column":129}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":54},"generated":{"line":1,"column":144}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":1,"column":145}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":24,"column":12},"generated":{"line":1,"column":152}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":24,"column":14},"generated":{"line":1,"column":153}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":24,"column":25},"generated":{"line":1,"column":163}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":24,"column":30},"generated":{"line":1,"column":167}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":24,"column":37},"generated":{"line":1,"column":173}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":1,"column":187}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":25,"column":11},"generated":{"line":1,"column":193}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":1,"column":196}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":1,"column":205}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":220}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":228}},{"source":"../ui/components/sortable-container/context.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":1,"column":244}}],"sources":{"../ui/components/sortable-container/context.ts":"import { MutableRefObject, Dispatch, SetStateAction, createContext } from \"react\";\n\nexport interface Item {\n    key: string;\n    index: number;\n    sorting: boolean;\n    active: boolean;\n    ref: MutableRefObject<HTMLDivElement | null>;\n}\n\nexport interface Items {\n    [key: string]: Item;\n}\n\ntype ItemsUpdater = Dispatch<SetStateAction<Items>>;\n\ninterface Context {\n    config: { direction: \"x\" | \"y\"; onEnd: (oldIndex: number, newIndex: number) => void };\n    items: Items;\n    setItems: ItemsUpdater;\n}\n\nexport const SortableContext = createContext<Context>({\n    config: { direction: \"y\", onEnd: () => {} },\n    items: {},\n    setItems: () => {}\n});\n"},"lineCount":null}},"error":null,"hash":"bf0878c6c2fc71011cf1828e2edb3ad7","cacheData":{"env":{}}}